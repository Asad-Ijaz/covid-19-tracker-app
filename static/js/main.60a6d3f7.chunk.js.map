{"version":3,"sources":["fetchingComponents/fetchData.js","App.js","reportWebVitals.js","index.js","fetchingComponents/postList.js","fetchingComponents/chart.js","fetchingComponents/globalCards.js","fetchingComponents/countryCards.js"],"names":["a","fetch","response","json","data","resource","result","status","suspender","fetchPosts","then","console","log","error","read","CreateResource","App","Typography","fallback","Box","sx","width","Skeleton","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","element","document","getElementById","ReactDOM","createRoot","render","StrictMode","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","PostList","useState","country","setCountry","posts","maxWidth","container","item","lg","md","sm","xs","className","variant","Global","m","minWidth","value","onChange","event","target","displayEmpty","inputProps","id","Countries","map","index","Country","ChartJs","props","globalconfirm","Object","keys","globalrecovers","globaldeaths","gconfirmValue","TotalConfirmed","grecoverValue","TotalRecovered","gdeathValue","TotalDeaths","countryConfirm","countryRecovers","countryDeaths","cConfirmValue","cRecoverValue","cDeathValue","lineData","labels","datasets","label","fill","backgroundColor","borderColor","showLine","borderWidth","lineOptions","legend","display","layout","bottom","top","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","fontColor","barData","options","stacked","fontSize","min","gridLines","GlobalCards","date","Date","style","gutterBottom","mb","component","CountryCards"],"mappings":"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","file":"static/js/main.60a6d3f7.chunk.js","sourcesContent":["async function fetchPosts() {\r\n        const response = await fetch(\"https://api.covid19api.com/summary\")\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n     export default function createResource() {\r\n        let status = \"loading\"\r\n        let result\r\n        let suspender = fetchPosts().then(\r\n            (data) => {\r\n                status = \"success\"\r\n                result = data\r\n                console.log('data is ',data)\r\n            },\r\n            (error) => {\r\n                status = \"error\"\r\n                result = error\r\n            }\r\n        )\r\n    \r\n        return {\r\n            read() {\r\n                if (status === \"loading\") {\r\n                    throw suspender\r\n                } else if (status === \"error\") {\r\n                    throw result\r\n                } else if (status === \"success\") {\r\n                    return result\r\n                }\r\n            },\r\n        }\r\n    }\r\n   ","import './App.css';\nimport Typography from '@mui/material/Typography';\nimport {Suspense } from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport Box from '@mui/material/Box';\nimport React from 'react';\nimport PostList from './fetchingComponents/postList'\nimport CreateResource from \"./fetchingComponents/fetchData\"\n\n\nconst resource = CreateResource()\n\nfunction App() {\n\n return (\n   <Typography>\n  <Suspense fallback={ <Box sx={{ width: 300 }}>\n      <Skeleton />\n      <Skeleton animation=\"wave\" />\n      <Skeleton animation={false} />\n    </Box>}>\n  <PostList resource={resource} />\n  \n \n</Suspense>\n\n   </Typography>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst element = document.getElementById(\"root\")\nReactDOM.createRoot(element).render(\n  <React.StrictMode>\n<App />\n</React.StrictMode>,\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React,{ useState} from 'react';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport ChartJs from './chart';\r\nimport GlobalCards from './globalCards'\r\nimport CountryCards from './countryCards'\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\nimport '../App.css';\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n\r\n\r\n\r\nexport default function PostList({ resource }) {\r\n\tlet [country, setCountry] =useState('');\r\n \r\n\tconst posts = resource.read()\r\n\tglobal = document.getElementById('global');\r\n\treturn (\r\n\t\t\r\n\t\t<Typography> <br/><br/>\r\n\t\t<Container maxWidth=\"lg\">\r\n         <Grid container spacing={2}>\r\n         <Grid item lg={12} md={12} sm={12} xs={12}>\r\n             <Item>\r\n         <Typography className=\"heading\" variant=\"h3\">Covid-19 Tracker App</Typography>\r\n         </Item>\r\n         </Grid>\r\n         </Grid>\r\n         </Container>\r\n\t\t <br/><br/>\r\n\t\t\t { \r\n\t\t  country == '' ? \r\n\t\t     <GlobalCards data={[country,posts.Global]}/> \r\n\t\t  :\r\n\t\t\t<CountryCards data={country}/>\r\n\t\r\n\t\t} \r\n <br/><br/>\r\n<Container maxWidth=\"sm\">\r\n         <Grid container spacing={2}>\r\n         <Grid item lg={12} md={12} sm={12} xs={12}>\r\n         <Item>\r\n\t\t\t <FormControl sx={{ m: 1, minWidth: 300 }}>\r\n        <Select\r\n\t\t  \r\n\t\t  \r\n          value={country}\r\n\t\t  onChange={((event)=>{\r\n\t\t\t  return{\r\n\t\t\t\t country:setCountry(event.target.value),\r\n\r\n\t\t\t };\r\n\t\t\t \r\n\t })}\r\n          displayEmpty\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n\t\t \r\n        >\r\n          <MenuItem id=\"global\" value=''>\r\n            <em>Global</em>\r\n          </MenuItem>\r\n\r\n          { posts.Countries.map((item,index)=>{\r\n        return(\r\n\t\t\t\r\n\t\t<MenuItem  value={item}>{item.Country}</MenuItem>\r\n\t)\r\n\t\t\t\r\n\t })}\r\n          \r\n        </Select>\r\n        <FormHelperText>Select Country</FormHelperText>\r\n      </FormControl>\r\n\t  </Item>\r\n\t\t </Grid>\r\n\t\t </Grid>\r\n\t\t </Container>\r\n\t\t <br/><br/>\r\n\t\t   <ChartJs value={[country,posts.Global]}/>\r\n\t\t  \r\n\t\t <br/><br/>\r\n\t\t \r\n\t\t</Typography>\r\n\t)\r\n}","import { ConfirmationNumberRounded } from '@mui/icons-material';\r\nimport React,{useState} from 'react'\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nfunction ChartJs(props){\r\n\r\n  // Global Data  \r\n console.log('props 1 is equal ',props.value);\r\n   let globalconfirm=Object.keys(props.value[1])[1];\r\n   let globalrecovers=Object.keys(props.value[1])[5];\r\n   let globaldeaths=Object.keys(props.value[1])[3];\r\n   let gconfirmValue=props.value[1].TotalConfirmed;\r\n   let grecoverValue=props.value[1].TotalRecovered;\r\n   let gdeathValue=props.value[1].TotalDeaths;\r\n//Country Data \r\nlet countryConfirm=Object.keys(props.value[0])[5];\r\nlet countryRecovers=Object.keys(props.value[0])[9];\r\nlet countryDeaths=Object.keys(props.value[0])[7];\r\nlet cConfirmValue=props.value[0].TotalConfirmed;\r\nlet cRecoverValue=props.value[0].TotalRecovered;\r\nlet cDeathValue=props.value[0].TotalDeaths;\r\n \r\n   const lineData = {\r\n    labels: [globalconfirm,globalrecovers,globaldeaths],\r\n    datasets: [\r\n      {\r\n        label: \"Corona Cases Detail\",\r\n        data: [gconfirmValue,grecoverValue,gdeathValue],\r\n        fill: true,\r\n        backgroundColor:[ 'rgb(135,206,235)', 'rgb(877,0,0.9)','rgb(255, 127, 127)' ],\r\n        borderColor:[ 'rgba(246, 36, 89, 1)', 'rgb(877,0,0.9)', ],\r\n        showLine: true,\r\n        borderWidth: 5,\r\n      },\r\n     ]\r\n  };\r\n \r\n  const lineOptions = {\r\n    legend:{\r\n      display:true,\r\n    },\r\n    layout:{padding:{bottom:60},\r\n          padding:{top:60}\r\n  },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n         ticks: {\r\n            beginAtZero: true,\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Speed in Miles per Hour\",\r\n            fontColor: \"green\"\r\n          }\r\n        },\r\n      ],\r\n    },\r\n  };\r\n// red\r\nconst barData = {\r\n        labels: [countryConfirm,countryRecovers,countryDeaths],\r\n        datasets: [\r\n          {\r\n            label: \"Corona Cases\",\r\n            data: [cConfirmValue,cRecoverValue,cDeathValue],\r\n            fill: true,\r\n            backgroundColor:[ 'rgb(135,206,235)', 'rgb(877,0,0.9)', 'rgb(877,0,0.9)'],\r\n            borderColor:[ 'rgba(246, 36, 89, 1)', 'rgb(877,0,0.9)', ],\r\n            showLine: true,\r\n            borderWidth: 5,\r\n          },\r\n         ]\r\n      };\r\n     \r\n      const barOptions = {\r\n        legend:{\r\n          display:true,\r\n        },\r\n        layout:{padding:{bottom:100}},\r\n        scales: {\r\n          yAxes: [{\r\n            stacked: false,\r\n            scaleLabel: {\r\n              display: true,\r\n              fontColor: 'white',\r\n              fontSize: 25,\r\n              labelString: 'Faction Points'\r\n            },\r\n            ticks: {\r\n              fontColor: 'white',\r\n              fontSize: 20,\r\n              min: 0\r\n            },\r\n            gridLines: {\r\n              display:true,\r\n              color: 'red'\r\n            }\r\n          }],\r\n         \r\n        },\r\n      };\r\n     \r\n    return(\r\n      <Typography>\r\n        <Container maxWidth=\"lg\">\r\n         <Grid container spacing={2}>\r\n         <Grid item lg={12} md={12} sm={12} xs={12}>\r\n         <Item>\r\n{props.value[0] == '' ?  <Line data={lineData}  options={lineOptions} /> :  <Bar data={barData}  options={barOptions} />}\r\n</Item>\r\n</Grid>\r\n</Grid>\r\n</Container>\r\n<appHeading/>\r\n      </Typography>\r\n\r\n    )\r\n}\r\nexport default ChartJs;","import Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n\r\nfunction GlobalCards(props){\r\n    let gconfirmValue=props.data[1].TotalConfirmed;\r\n    let grecoverValue=props.data[1].TotalRecovered;\r\n    let gdeathValue=props.data[1].TotalDeaths;\r\n    let date = props.data[1].Date;\r\nreturn(\r\n\r\n    <Typography>\r\n         <Container maxWidth=\"lg\">\r\n         <Grid container spacing={2}>\r\n         <Grid item lg={4} md={4} sm={12} xs={12}>\r\n         <Item style={{backgroundColor:'blue'}}>\r\n<Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n         Infected\r\n        </Typography>\r\n\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t{gconfirmValue}\r\n        </Typography>\r\n        <Typography  sx={{ fontSize: 12 }} component=\"div\">\r\n        {date}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n\t\tNumber of active cases of Covid-19.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Item>\r\n    </Grid>\r\n    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n    <Item style={{backgroundColor:'green'}}>\r\n\t<Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n        Recovered\r\n        </Typography>\r\n\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t{grecoverValue}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 12 }} component=\"div\">\r\n        {date}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n\t\tNumber of recovered cases from Covid-19.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Item>\r\n    </Grid>\r\n    <Grid item lg={4} md={4} sm={12} xs={12}> \r\n    <Item style={{backgroundColor:'red'}}>\r\n\t<Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n          Deaths\r\n        </Typography>\r\n\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t{gdeathValue}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 12 }}  component=\"div\">\r\n        {date}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n\t\tNumber of deaths caused by of Covid-19.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Item>\r\n    </Grid>\r\n    </Grid>\r\n    </Container>\r\n    </Typography>\r\n\r\n)\r\n}\r\nexport default GlobalCards;","import Container from '@mui/material/Container';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n\r\n\r\nfunction CountryCards(props){\r\n   \r\nreturn(\r\n\r\n    <Typography>\r\n         <Container maxWidth=\"lg\">\r\n         <Grid container spacing={2}>\r\n         <Grid item lg={4} md={4} sm={12} xs={12}>\r\n         <Item style={{backgroundColor:'blue'}}>\r\n<Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n         Infected\r\n        </Typography>\r\n\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t{props.data.TotalConfirmed}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 12 }}  component=\"div\">\r\n        {props.data.Date}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n\t\tNumber of active cases of Covid-19.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Item>\r\n    </Grid>\r\n    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n    <Item style={{backgroundColor:'green'}}>\r\n\t<Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n        Recovered\r\n        </Typography>\r\n\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t{props.data.TotalRecovered}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 12 }} component=\"div\">\r\n        {props.data.Date}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n\t\tNumber of recovered cases from Covid-19.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Item>\r\n    </Grid>\r\n    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n    <Item style={{backgroundColor:'red'}}>\r\n\t<Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n          Deaths\r\n        </Typography>\r\n\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t{props.data.TotalDeaths}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 12 }} component=\"div\">\r\n        {props.data.Date}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n\t\tNumber of deaths caused by of Covid-19.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </Item>\r\n    </Grid>\r\n    </Grid>\r\n    </Container>\r\n    </Typography>\r\n\r\n)\r\n}\r\nexport default CountryCards;"],"sourceRoot":""}